//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
//     el código se vuelve a generar.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace DominioEntidades.SisReservas
{
    
    public partial class O_LISTAR_BOLETO_COMPLETO : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Propiedades primitivas
    
        [DataMember]
        public Nullable<decimal> ID_BOLETO
        {
            get { return _iD_BOLETO; }
            set
            {
                if (_iD_BOLETO != value)
                {
                    OnComplexPropertyChanging();
                    _iD_BOLETO = value;
                    OnPropertyChanged("ID_BOLETO");
                }
            }
        }
        private Nullable<decimal> _iD_BOLETO;
    
        [DataMember]
        public Nullable<decimal> ID_RUTA
        {
            get { return _iD_RUTA; }
            set
            {
                if (_iD_RUTA != value)
                {
                    OnComplexPropertyChanging();
                    _iD_RUTA = value;
                    OnPropertyChanged("ID_RUTA");
                }
            }
        }
        private Nullable<decimal> _iD_RUTA;
    
        [DataMember]
        public Nullable<decimal> ID_USUARIO
        {
            get { return _iD_USUARIO; }
            set
            {
                if (_iD_USUARIO != value)
                {
                    OnComplexPropertyChanging();
                    _iD_USUARIO = value;
                    OnPropertyChanged("ID_USUARIO");
                }
            }
        }
        private Nullable<decimal> _iD_USUARIO;
    
        [DataMember]
        public Nullable<decimal> ID_SUCURSAL
        {
            get { return _iD_SUCURSAL; }
            set
            {
                if (_iD_SUCURSAL != value)
                {
                    OnComplexPropertyChanging();
                    _iD_SUCURSAL = value;
                    OnPropertyChanged("ID_SUCURSAL");
                }
            }
        }
        private Nullable<decimal> _iD_SUCURSAL;
    
        [DataMember]
        public Nullable<System.DateTime> FECHA_REGISTRO
        {
            get { return _fECHA_REGISTRO; }
            set
            {
                if (_fECHA_REGISTRO != value)
                {
                    OnComplexPropertyChanging();
                    _fECHA_REGISTRO = value;
                    OnPropertyChanged("FECHA_REGISTRO");
                }
            }
        }
        private Nullable<System.DateTime> _fECHA_REGISTRO;
    
        [DataMember]
        public Nullable<decimal> AUD_ESTADO
        {
            get { return _aUD_ESTADO; }
            set
            {
                if (_aUD_ESTADO != value)
                {
                    OnComplexPropertyChanging();
                    _aUD_ESTADO = value;
                    OnPropertyChanged("AUD_ESTADO");
                }
            }
        }
        private Nullable<decimal> _aUD_ESTADO;
    
        [DataMember]
        public Nullable<decimal> ID_DETALLE_BOLETO
        {
            get { return _iD_DETALLE_BOLETO; }
            set
            {
                if (_iD_DETALLE_BOLETO != value)
                {
                    OnComplexPropertyChanging();
                    _iD_DETALLE_BOLETO = value;
                    OnPropertyChanged("ID_DETALLE_BOLETO");
                }
            }
        }
        private Nullable<decimal> _iD_DETALLE_BOLETO;
    
        [DataMember]
        public Nullable<decimal> ID_ASIENTO
        {
            get { return _iD_ASIENTO; }
            set
            {
                if (_iD_ASIENTO != value)
                {
                    OnComplexPropertyChanging();
                    _iD_ASIENTO = value;
                    OnPropertyChanged("ID_ASIENTO");
                }
            }
        }
        private Nullable<decimal> _iD_ASIENTO;
    
        [DataMember]
        public Nullable<decimal> ID_PERSONA
        {
            get { return _iD_PERSONA; }
            set
            {
                if (_iD_PERSONA != value)
                {
                    OnComplexPropertyChanging();
                    _iD_PERSONA = value;
                    OnPropertyChanged("ID_PERSONA");
                }
            }
        }
        private Nullable<decimal> _iD_PERSONA;
    
        [DataMember]
        public Nullable<decimal> ID_TIPO_ASIENTO
        {
            get { return _iD_TIPO_ASIENTO; }
            set
            {
                if (_iD_TIPO_ASIENTO != value)
                {
                    OnComplexPropertyChanging();
                    _iD_TIPO_ASIENTO = value;
                    OnPropertyChanged("ID_TIPO_ASIENTO");
                }
            }
        }
        private Nullable<decimal> _iD_TIPO_ASIENTO;
    
        [DataMember]
        public string NUMERO
        {
            get { return _nUMERO; }
            set
            {
                if (_nUMERO != value)
                {
                    OnComplexPropertyChanging();
                    _nUMERO = value;
                    OnPropertyChanged("NUMERO");
                }
            }
        }
        private string _nUMERO;
    
        [DataMember]
        public string TIPO_ASIENTO
        {
            get { return _tIPO_ASIENTO; }
            set
            {
                if (_tIPO_ASIENTO != value)
                {
                    OnComplexPropertyChanging();
                    _tIPO_ASIENTO = value;
                    OnPropertyChanged("TIPO_ASIENTO");
                }
            }
        }
        private string _tIPO_ASIENTO;

        #endregion

        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, O_LISTAR_BOLETO_COMPLETO complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("El parámetro de cadena no puede ser NULL ni estar vacío.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID_BOLETO", parentPropertyName), complexObject == null ? null : (object)complexObject.ID_BOLETO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID_RUTA", parentPropertyName), complexObject == null ? null : (object)complexObject.ID_RUTA);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID_USUARIO", parentPropertyName), complexObject == null ? null : (object)complexObject.ID_USUARIO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID_SUCURSAL", parentPropertyName), complexObject == null ? null : (object)complexObject.ID_SUCURSAL);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.FECHA_REGISTRO", parentPropertyName), complexObject == null ? null : (object)complexObject.FECHA_REGISTRO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.AUD_ESTADO", parentPropertyName), complexObject == null ? null : (object)complexObject.AUD_ESTADO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID_DETALLE_BOLETO", parentPropertyName), complexObject == null ? null : (object)complexObject.ID_DETALLE_BOLETO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID_ASIENTO", parentPropertyName), complexObject == null ? null : (object)complexObject.ID_ASIENTO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID_PERSONA", parentPropertyName), complexObject == null ? null : (object)complexObject.ID_PERSONA);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID_TIPO_ASIENTO", parentPropertyName), complexObject == null ? null : (object)complexObject.ID_TIPO_ASIENTO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.NUMERO", parentPropertyName), complexObject == null ? null : (object)complexObject.NUMERO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TIPO_ASIENTO", parentPropertyName), complexObject == null ? null : (object)complexObject.TIPO_ASIENTO);
        }

        #endregion

    }
}
