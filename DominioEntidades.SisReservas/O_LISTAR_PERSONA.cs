//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
//     el código se vuelve a generar.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace DominioEntidades.SisReservas
{
    
    public partial class O_LISTAR_PERSONA : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Propiedades primitivas
    
        [DataMember]
        public Nullable<decimal> ID_PERSONA
        {
            get { return _iD_PERSONA; }
            set
            {
                if (_iD_PERSONA != value)
                {
                    OnComplexPropertyChanging();
                    _iD_PERSONA = value;
                    OnPropertyChanged("ID_PERSONA");
                }
            }
        }
        private Nullable<decimal> _iD_PERSONA;
    
        [DataMember]
        public Nullable<decimal> ID_TIPO_PERSONA
        {
            get { return _iD_TIPO_PERSONA; }
            set
            {
                if (_iD_TIPO_PERSONA != value)
                {
                    OnComplexPropertyChanging();
                    _iD_TIPO_PERSONA = value;
                    OnPropertyChanged("ID_TIPO_PERSONA");
                }
            }
        }
        private Nullable<decimal> _iD_TIPO_PERSONA;
    
        [DataMember]
        public string TIPO_PERSONA
        {
            get { return _tIPO_PERSONA; }
            set
            {
                if (_tIPO_PERSONA != value)
                {
                    OnComplexPropertyChanging();
                    _tIPO_PERSONA = value;
                    OnPropertyChanged("TIPO_PERSONA");
                }
            }
        }
        private string _tIPO_PERSONA;
    
        [DataMember]
        public Nullable<decimal> ID_GENERO
        {
            get { return _iD_GENERO; }
            set
            {
                if (_iD_GENERO != value)
                {
                    OnComplexPropertyChanging();
                    _iD_GENERO = value;
                    OnPropertyChanged("ID_GENERO");
                }
            }
        }
        private Nullable<decimal> _iD_GENERO;
    
        [DataMember]
        public string GENERO
        {
            get { return _gENERO; }
            set
            {
                if (_gENERO != value)
                {
                    OnComplexPropertyChanging();
                    _gENERO = value;
                    OnPropertyChanged("GENERO");
                }
            }
        }
        private string _gENERO;
    
        [DataMember]
        public string NOMBRE
        {
            get { return _nOMBRE; }
            set
            {
                if (_nOMBRE != value)
                {
                    OnComplexPropertyChanging();
                    _nOMBRE = value;
                    OnPropertyChanged("NOMBRE");
                }
            }
        }
        private string _nOMBRE;
    
        [DataMember]
        public string AP_PATERNO
        {
            get { return _aP_PATERNO; }
            set
            {
                if (_aP_PATERNO != value)
                {
                    OnComplexPropertyChanging();
                    _aP_PATERNO = value;
                    OnPropertyChanged("AP_PATERNO");
                }
            }
        }
        private string _aP_PATERNO;
    
        [DataMember]
        public string AP_MATERNO
        {
            get { return _aP_MATERNO; }
            set
            {
                if (_aP_MATERNO != value)
                {
                    OnComplexPropertyChanging();
                    _aP_MATERNO = value;
                    OnPropertyChanged("AP_MATERNO");
                }
            }
        }
        private string _aP_MATERNO;
    
        [DataMember]
        public Nullable<System.DateTime> FECHA_NACIMIENTO
        {
            get { return _fECHA_NACIMIENTO; }
            set
            {
                if (_fECHA_NACIMIENTO != value)
                {
                    OnComplexPropertyChanging();
                    _fECHA_NACIMIENTO = value;
                    OnPropertyChanged("FECHA_NACIMIENTO");
                }
            }
        }
        private Nullable<System.DateTime> _fECHA_NACIMIENTO;
    
        [DataMember]
        public string DIRECCION
        {
            get { return _dIRECCION; }
            set
            {
                if (_dIRECCION != value)
                {
                    OnComplexPropertyChanging();
                    _dIRECCION = value;
                    OnPropertyChanged("DIRECCION");
                }
            }
        }
        private string _dIRECCION;
    
        [DataMember]
        public string EMAIL
        {
            get { return _eMAIL; }
            set
            {
                if (_eMAIL != value)
                {
                    OnComplexPropertyChanging();
                    _eMAIL = value;
                    OnPropertyChanged("EMAIL");
                }
            }
        }
        private string _eMAIL;
    
        [DataMember]
        public Nullable<decimal> APP_ID_USUARIO
        {
            get { return _aPP_ID_USUARIO; }
            set
            {
                if (_aPP_ID_USUARIO != value)
                {
                    OnComplexPropertyChanging();
                    _aPP_ID_USUARIO = value;
                    OnPropertyChanged("APP_ID_USUARIO");
                }
            }
        }
        private Nullable<decimal> _aPP_ID_USUARIO;
    
        [DataMember]
        public Nullable<decimal> AUD_ESTADO
        {
            get { return _aUD_ESTADO; }
            set
            {
                if (_aUD_ESTADO != value)
                {
                    OnComplexPropertyChanging();
                    _aUD_ESTADO = value;
                    OnPropertyChanged("AUD_ESTADO");
                }
            }
        }
        private Nullable<decimal> _aUD_ESTADO;
    
        [DataMember]
        public Nullable<System.DateTime> FECHA_REGISTRO
        {
            get { return _fECHA_REGISTRO; }
            set
            {
                if (_fECHA_REGISTRO != value)
                {
                    OnComplexPropertyChanging();
                    _fECHA_REGISTRO = value;
                    OnPropertyChanged("FECHA_REGISTRO");
                }
            }
        }
        private Nullable<System.DateTime> _fECHA_REGISTRO;

        #endregion

        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, O_LISTAR_PERSONA complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("El parámetro de cadena no puede ser NULL ni estar vacío.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID_PERSONA", parentPropertyName), complexObject == null ? null : (object)complexObject.ID_PERSONA);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID_TIPO_PERSONA", parentPropertyName), complexObject == null ? null : (object)complexObject.ID_TIPO_PERSONA);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.TIPO_PERSONA", parentPropertyName), complexObject == null ? null : (object)complexObject.TIPO_PERSONA);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID_GENERO", parentPropertyName), complexObject == null ? null : (object)complexObject.ID_GENERO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.GENERO", parentPropertyName), complexObject == null ? null : (object)complexObject.GENERO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.NOMBRE", parentPropertyName), complexObject == null ? null : (object)complexObject.NOMBRE);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.AP_PATERNO", parentPropertyName), complexObject == null ? null : (object)complexObject.AP_PATERNO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.AP_MATERNO", parentPropertyName), complexObject == null ? null : (object)complexObject.AP_MATERNO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.FECHA_NACIMIENTO", parentPropertyName), complexObject == null ? null : (object)complexObject.FECHA_NACIMIENTO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.DIRECCION", parentPropertyName), complexObject == null ? null : (object)complexObject.DIRECCION);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.EMAIL", parentPropertyName), complexObject == null ? null : (object)complexObject.EMAIL);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.APP_ID_USUARIO", parentPropertyName), complexObject == null ? null : (object)complexObject.APP_ID_USUARIO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.AUD_ESTADO", parentPropertyName), complexObject == null ? null : (object)complexObject.AUD_ESTADO);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.FECHA_REGISTRO", parentPropertyName), complexObject == null ? null : (object)complexObject.FECHA_REGISTRO);
        }

        #endregion

    }
}
