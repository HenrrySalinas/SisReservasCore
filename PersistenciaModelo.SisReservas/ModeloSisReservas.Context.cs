//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
//     el código se vuelve a generar.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;
using DominioEntidades.SisReservas;
using DominioContratos.SisReservas;
using PersistenciaNucleo.SisReservas;

namespace PersistenciaModelo.SisReservas
{
    public partial class EntidadesSisReservas : ObjectContext,IConsultableUnidadDeTrabajo
    {
    	public void RealizarCambios()
    	{
    		SaveChanges();
    	}
    
    	public void RegistrarCambios<TEntidad>(TEntidad entidad) where TEntidad : class, IObjectWithChangeTracker
    	{
    		this.CreateObjectSet<TEntidad>().ApplyChanges(entidad);
    	}
    
    	public IObjectSet<TEntidad> CrearSet<TEntidad>() where TEntidad : class, IObjectWithChangeTracker
    	{
    		return base.CreateObjectSet<TEntidad>() as IObjectSet<TEntidad>;
    	}
        public const string ConnectionString = "name=EntidadesSisReservas";
        public const string ContainerName = "EntidadesSisReservas";
    
        #region Constructors
    
        public EntidadesSisReservas()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public EntidadesSisReservas(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public EntidadesSisReservas(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // La creación de servidores proxy requiere el uso de ProxyDataContractResolver y
            // puede permitir la carga diferida que puede expandir el gráfico durante la serialización.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region Importaciones de funciones
        public virtual ObjectResult<O_LISTAR_GENERO> PGET_LISTADOS_P_LISTAR_GENERO(string i_CREDENCIAL, Nullable<decimal> i_ID_GENERO, string i_DESCRIPCION, Nullable<decimal> i_APP_ID_USUARIO, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_GENEROParameter;
    
            if (i_ID_GENERO.HasValue)
            {
                i_ID_GENEROParameter = new ObjectParameter("I_ID_GENERO", i_ID_GENERO);
            }
            else
            {
                i_ID_GENEROParameter = new ObjectParameter("I_ID_GENERO", typeof(decimal));
            }
    
            ObjectParameter i_DESCRIPCIONParameter;
    
            if (i_DESCRIPCION != null)
            {
                i_DESCRIPCIONParameter = new ObjectParameter("I_DESCRIPCION", i_DESCRIPCION);
            }
            else
            {
                i_DESCRIPCIONParameter = new ObjectParameter("I_DESCRIPCION", typeof(string));
            }
    
            ObjectParameter i_APP_ID_USUARIOParameter;
    
            if (i_APP_ID_USUARIO.HasValue)
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", i_APP_ID_USUARIO);
            }
            else
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
            return base.ExecuteFunction<O_LISTAR_GENERO>("PGET_LISTADOS_P_LISTAR_GENERO", i_CREDENCIALParameter, i_ID_GENEROParameter, i_DESCRIPCIONParameter, i_APP_ID_USUARIOParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter);
        }
        public virtual ObjectResult<O_RESULTADO> PGET_GESTION_P_REGISTRA_DOCUMENTO(string i_CREDENCIAL, Nullable<decimal> i_ID_DOCUMENTO, Nullable<decimal> i_ID_PERSONA, Nullable<decimal> i_ID_TIPO_DOCUMENTO, string i_NUMERO_DOCUMENTO, string i_DESCRIPCION, Nullable<decimal> i_APP_ID_USUARIO, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_DOCUMENTOParameter;
    
            if (i_ID_DOCUMENTO.HasValue)
            {
                i_ID_DOCUMENTOParameter = new ObjectParameter("I_ID_DOCUMENTO", i_ID_DOCUMENTO);
            }
            else
            {
                i_ID_DOCUMENTOParameter = new ObjectParameter("I_ID_DOCUMENTO", typeof(decimal));
            }
    
            ObjectParameter i_ID_PERSONAParameter;
    
            if (i_ID_PERSONA.HasValue)
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", i_ID_PERSONA);
            }
            else
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", typeof(decimal));
            }
    
            ObjectParameter i_ID_TIPO_DOCUMENTOParameter;
    
            if (i_ID_TIPO_DOCUMENTO.HasValue)
            {
                i_ID_TIPO_DOCUMENTOParameter = new ObjectParameter("I_ID_TIPO_DOCUMENTO", i_ID_TIPO_DOCUMENTO);
            }
            else
            {
                i_ID_TIPO_DOCUMENTOParameter = new ObjectParameter("I_ID_TIPO_DOCUMENTO", typeof(decimal));
            }
    
            ObjectParameter i_NUMERO_DOCUMENTOParameter;
    
            if (i_NUMERO_DOCUMENTO != null)
            {
                i_NUMERO_DOCUMENTOParameter = new ObjectParameter("I_NUMERO_DOCUMENTO", i_NUMERO_DOCUMENTO);
            }
            else
            {
                i_NUMERO_DOCUMENTOParameter = new ObjectParameter("I_NUMERO_DOCUMENTO", typeof(string));
            }
    
            ObjectParameter i_DESCRIPCIONParameter;
    
            if (i_DESCRIPCION != null)
            {
                i_DESCRIPCIONParameter = new ObjectParameter("I_DESCRIPCION", i_DESCRIPCION);
            }
            else
            {
                i_DESCRIPCIONParameter = new ObjectParameter("I_DESCRIPCION", typeof(string));
            }
    
            ObjectParameter i_APP_ID_USUARIOParameter;
    
            if (i_APP_ID_USUARIO.HasValue)
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", i_APP_ID_USUARIO);
            }
            else
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
            return base.ExecuteFunction<O_RESULTADO>("PGET_GESTION_P_REGISTRA_DOCUMENTO", i_CREDENCIALParameter, i_ID_DOCUMENTOParameter, i_ID_PERSONAParameter, i_ID_TIPO_DOCUMENTOParameter, i_NUMERO_DOCUMENTOParameter, i_DESCRIPCIONParameter, i_APP_ID_USUARIOParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter);
        }
        public virtual ObjectResult<O_RESULTADO> PGET_GESTION_P_REGISTRAR_GENERO(string i_CREDENCIAL, Nullable<decimal> i_ID_GENERO, string i_DESCRIPCION, Nullable<decimal> i_APP_ID_USUARIO, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_GENEROParameter;
    
            if (i_ID_GENERO.HasValue)
            {
                i_ID_GENEROParameter = new ObjectParameter("I_ID_GENERO", i_ID_GENERO);
            }
            else
            {
                i_ID_GENEROParameter = new ObjectParameter("I_ID_GENERO", typeof(decimal));
            }
    
            ObjectParameter i_DESCRIPCIONParameter;
    
            if (i_DESCRIPCION != null)
            {
                i_DESCRIPCIONParameter = new ObjectParameter("I_DESCRIPCION", i_DESCRIPCION);
            }
            else
            {
                i_DESCRIPCIONParameter = new ObjectParameter("I_DESCRIPCION", typeof(string));
            }
    
            ObjectParameter i_APP_ID_USUARIOParameter;
    
            if (i_APP_ID_USUARIO.HasValue)
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", i_APP_ID_USUARIO);
            }
            else
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
            return base.ExecuteFunction<O_RESULTADO>("PGET_GESTION_P_REGISTRAR_GENERO", i_CREDENCIALParameter, i_ID_GENEROParameter, i_DESCRIPCIONParameter, i_APP_ID_USUARIOParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter);
        }
        public virtual ObjectResult<O_RESULTADO> PGET_GESTION_P_REGISTRAR_PERSONA(string i_CREDENCIAL, Nullable<decimal> i_ID_PERSONA, Nullable<decimal> i_ID_TIPO_PERSONA, Nullable<decimal> i_ID_GENERO, string i_NOMBRE, string i_AP_PATERNO, string i_AP_MATERNO, Nullable<System.DateTime> i_FECHA_NACIMIENTO, string i_DIRECCION, string i_EMAIL, Nullable<decimal> i_APP_ID_USUARIO, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_PERSONAParameter;
    
            if (i_ID_PERSONA.HasValue)
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", i_ID_PERSONA);
            }
            else
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", typeof(decimal));
            }
    
            ObjectParameter i_ID_TIPO_PERSONAParameter;
    
            if (i_ID_TIPO_PERSONA.HasValue)
            {
                i_ID_TIPO_PERSONAParameter = new ObjectParameter("I_ID_TIPO_PERSONA", i_ID_TIPO_PERSONA);
            }
            else
            {
                i_ID_TIPO_PERSONAParameter = new ObjectParameter("I_ID_TIPO_PERSONA", typeof(decimal));
            }
    
            ObjectParameter i_ID_GENEROParameter;
    
            if (i_ID_GENERO.HasValue)
            {
                i_ID_GENEROParameter = new ObjectParameter("I_ID_GENERO", i_ID_GENERO);
            }
            else
            {
                i_ID_GENEROParameter = new ObjectParameter("I_ID_GENERO", typeof(decimal));
            }
    
            ObjectParameter i_NOMBREParameter;
    
            if (i_NOMBRE != null)
            {
                i_NOMBREParameter = new ObjectParameter("I_NOMBRE", i_NOMBRE);
            }
            else
            {
                i_NOMBREParameter = new ObjectParameter("I_NOMBRE", typeof(string));
            }
    
            ObjectParameter i_AP_PATERNOParameter;
    
            if (i_AP_PATERNO != null)
            {
                i_AP_PATERNOParameter = new ObjectParameter("I_AP_PATERNO", i_AP_PATERNO);
            }
            else
            {
                i_AP_PATERNOParameter = new ObjectParameter("I_AP_PATERNO", typeof(string));
            }
    
            ObjectParameter i_AP_MATERNOParameter;
    
            if (i_AP_MATERNO != null)
            {
                i_AP_MATERNOParameter = new ObjectParameter("I_AP_MATERNO", i_AP_MATERNO);
            }
            else
            {
                i_AP_MATERNOParameter = new ObjectParameter("I_AP_MATERNO", typeof(string));
            }
    
            ObjectParameter i_FECHA_NACIMIENTOParameter;
    
            if (i_FECHA_NACIMIENTO.HasValue)
            {
                i_FECHA_NACIMIENTOParameter = new ObjectParameter("I_FECHA_NACIMIENTO", i_FECHA_NACIMIENTO);
            }
            else
            {
                i_FECHA_NACIMIENTOParameter = new ObjectParameter("I_FECHA_NACIMIENTO", typeof(System.DateTime));
            }
    
            ObjectParameter i_DIRECCIONParameter;
    
            if (i_DIRECCION != null)
            {
                i_DIRECCIONParameter = new ObjectParameter("I_DIRECCION", i_DIRECCION);
            }
            else
            {
                i_DIRECCIONParameter = new ObjectParameter("I_DIRECCION", typeof(string));
            }
    
            ObjectParameter i_EMAILParameter;
    
            if (i_EMAIL != null)
            {
                i_EMAILParameter = new ObjectParameter("I_EMAIL", i_EMAIL);
            }
            else
            {
                i_EMAILParameter = new ObjectParameter("I_EMAIL", typeof(string));
            }
    
            ObjectParameter i_APP_ID_USUARIOParameter;
    
            if (i_APP_ID_USUARIO.HasValue)
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", i_APP_ID_USUARIO);
            }
            else
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
            return base.ExecuteFunction<O_RESULTADO>("PGET_GESTION_P_REGISTRAR_PERSONA", i_CREDENCIALParameter, i_ID_PERSONAParameter, i_ID_TIPO_PERSONAParameter, i_ID_GENEROParameter, i_NOMBREParameter, i_AP_PATERNOParameter, i_AP_MATERNOParameter, i_FECHA_NACIMIENTOParameter, i_DIRECCIONParameter, i_EMAILParameter, i_APP_ID_USUARIOParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter);
        }
        public virtual ObjectResult<O_LISTAR_DOCUMENTO> PGET_LISTADOS_P_LISTAR_DOCUMENTO(string i_CREDENCIAL, Nullable<decimal> i_ID_DOCUMENTO, Nullable<decimal> i_ID_PERSONA, Nullable<decimal> i_ID_TIPO_DOCUMENTO, string i_TIPO_DOCUMENTO, string i_NUMERO_DOCUMENTO, string i_DESCRIPCION, Nullable<decimal> i_APP_ID_USUARIO, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_DOCUMENTOParameter;
    
            if (i_ID_DOCUMENTO.HasValue)
            {
                i_ID_DOCUMENTOParameter = new ObjectParameter("I_ID_DOCUMENTO", i_ID_DOCUMENTO);
            }
            else
            {
                i_ID_DOCUMENTOParameter = new ObjectParameter("I_ID_DOCUMENTO", typeof(decimal));
            }
    
            ObjectParameter i_ID_PERSONAParameter;
    
            if (i_ID_PERSONA.HasValue)
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", i_ID_PERSONA);
            }
            else
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", typeof(decimal));
            }
    
            ObjectParameter i_ID_TIPO_DOCUMENTOParameter;
    
            if (i_ID_TIPO_DOCUMENTO.HasValue)
            {
                i_ID_TIPO_DOCUMENTOParameter = new ObjectParameter("I_ID_TIPO_DOCUMENTO", i_ID_TIPO_DOCUMENTO);
            }
            else
            {
                i_ID_TIPO_DOCUMENTOParameter = new ObjectParameter("I_ID_TIPO_DOCUMENTO", typeof(decimal));
            }
    
            ObjectParameter i_TIPO_DOCUMENTOParameter;
    
            if (i_TIPO_DOCUMENTO != null)
            {
                i_TIPO_DOCUMENTOParameter = new ObjectParameter("I_TIPO_DOCUMENTO", i_TIPO_DOCUMENTO);
            }
            else
            {
                i_TIPO_DOCUMENTOParameter = new ObjectParameter("I_TIPO_DOCUMENTO", typeof(string));
            }
    
            ObjectParameter i_NUMERO_DOCUMENTOParameter;
    
            if (i_NUMERO_DOCUMENTO != null)
            {
                i_NUMERO_DOCUMENTOParameter = new ObjectParameter("I_NUMERO_DOCUMENTO", i_NUMERO_DOCUMENTO);
            }
            else
            {
                i_NUMERO_DOCUMENTOParameter = new ObjectParameter("I_NUMERO_DOCUMENTO", typeof(string));
            }
    
            ObjectParameter i_DESCRIPCIONParameter;
    
            if (i_DESCRIPCION != null)
            {
                i_DESCRIPCIONParameter = new ObjectParameter("I_DESCRIPCION", i_DESCRIPCION);
            }
            else
            {
                i_DESCRIPCIONParameter = new ObjectParameter("I_DESCRIPCION", typeof(string));
            }
    
            ObjectParameter i_APP_ID_USUARIOParameter;
    
            if (i_APP_ID_USUARIO.HasValue)
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", i_APP_ID_USUARIO);
            }
            else
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
            return base.ExecuteFunction<O_LISTAR_DOCUMENTO>("PGET_LISTADOS_P_LISTAR_DOCUMENTO", i_CREDENCIALParameter, i_ID_DOCUMENTOParameter, i_ID_PERSONAParameter, i_ID_TIPO_DOCUMENTOParameter, i_TIPO_DOCUMENTOParameter, i_NUMERO_DOCUMENTOParameter, i_DESCRIPCIONParameter, i_APP_ID_USUARIOParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter);
        }
        public virtual ObjectResult<O_LISTAR_PERSONA> PGET_LISTADOS_P_LISTAR_PERSONA(string i_CREDENCIAL, Nullable<decimal> i_ID_PERSONA, Nullable<decimal> i_ID_TIPO_PERSONA, string i_TIPO_PERSONA, Nullable<decimal> i_ID_GENERO, string i_GENERO, string i_NOMBRE, string i_AP_PATERNO, string i_AP_MATERNO, Nullable<System.DateTime> i_FECHA_NACIMIENTO, string i_DIRECCION, string i_EMAIL, Nullable<decimal> i_APP_ID_USUARIO, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_PERSONAParameter;
    
            if (i_ID_PERSONA.HasValue)
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", i_ID_PERSONA);
            }
            else
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", typeof(decimal));
            }
    
            ObjectParameter i_ID_TIPO_PERSONAParameter;
    
            if (i_ID_TIPO_PERSONA.HasValue)
            {
                i_ID_TIPO_PERSONAParameter = new ObjectParameter("I_ID_TIPO_PERSONA", i_ID_TIPO_PERSONA);
            }
            else
            {
                i_ID_TIPO_PERSONAParameter = new ObjectParameter("I_ID_TIPO_PERSONA", typeof(decimal));
            }
    
            ObjectParameter i_TIPO_PERSONAParameter;
    
            if (i_TIPO_PERSONA != null)
            {
                i_TIPO_PERSONAParameter = new ObjectParameter("I_TIPO_PERSONA", i_TIPO_PERSONA);
            }
            else
            {
                i_TIPO_PERSONAParameter = new ObjectParameter("I_TIPO_PERSONA", typeof(string));
            }
    
            ObjectParameter i_ID_GENEROParameter;
    
            if (i_ID_GENERO.HasValue)
            {
                i_ID_GENEROParameter = new ObjectParameter("I_ID_GENERO", i_ID_GENERO);
            }
            else
            {
                i_ID_GENEROParameter = new ObjectParameter("I_ID_GENERO", typeof(decimal));
            }
    
            ObjectParameter i_GENEROParameter;
    
            if (i_GENERO != null)
            {
                i_GENEROParameter = new ObjectParameter("I_GENERO", i_GENERO);
            }
            else
            {
                i_GENEROParameter = new ObjectParameter("I_GENERO", typeof(string));
            }
    
            ObjectParameter i_NOMBREParameter;
    
            if (i_NOMBRE != null)
            {
                i_NOMBREParameter = new ObjectParameter("I_NOMBRE", i_NOMBRE);
            }
            else
            {
                i_NOMBREParameter = new ObjectParameter("I_NOMBRE", typeof(string));
            }
    
            ObjectParameter i_AP_PATERNOParameter;
    
            if (i_AP_PATERNO != null)
            {
                i_AP_PATERNOParameter = new ObjectParameter("I_AP_PATERNO", i_AP_PATERNO);
            }
            else
            {
                i_AP_PATERNOParameter = new ObjectParameter("I_AP_PATERNO", typeof(string));
            }
    
            ObjectParameter i_AP_MATERNOParameter;
    
            if (i_AP_MATERNO != null)
            {
                i_AP_MATERNOParameter = new ObjectParameter("I_AP_MATERNO", i_AP_MATERNO);
            }
            else
            {
                i_AP_MATERNOParameter = new ObjectParameter("I_AP_MATERNO", typeof(string));
            }
    
            ObjectParameter i_FECHA_NACIMIENTOParameter;
    
            if (i_FECHA_NACIMIENTO.HasValue)
            {
                i_FECHA_NACIMIENTOParameter = new ObjectParameter("I_FECHA_NACIMIENTO", i_FECHA_NACIMIENTO);
            }
            else
            {
                i_FECHA_NACIMIENTOParameter = new ObjectParameter("I_FECHA_NACIMIENTO", typeof(System.DateTime));
            }
    
            ObjectParameter i_DIRECCIONParameter;
    
            if (i_DIRECCION != null)
            {
                i_DIRECCIONParameter = new ObjectParameter("I_DIRECCION", i_DIRECCION);
            }
            else
            {
                i_DIRECCIONParameter = new ObjectParameter("I_DIRECCION", typeof(string));
            }
    
            ObjectParameter i_EMAILParameter;
    
            if (i_EMAIL != null)
            {
                i_EMAILParameter = new ObjectParameter("I_EMAIL", i_EMAIL);
            }
            else
            {
                i_EMAILParameter = new ObjectParameter("I_EMAIL", typeof(string));
            }
    
            ObjectParameter i_APP_ID_USUARIOParameter;
    
            if (i_APP_ID_USUARIO.HasValue)
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", i_APP_ID_USUARIO);
            }
            else
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
            return base.ExecuteFunction<O_LISTAR_PERSONA>("PGET_LISTADOS_P_LISTAR_PERSONA", i_CREDENCIALParameter, i_ID_PERSONAParameter, i_ID_TIPO_PERSONAParameter, i_TIPO_PERSONAParameter, i_ID_GENEROParameter, i_GENEROParameter, i_NOMBREParameter, i_AP_PATERNOParameter, i_AP_MATERNOParameter, i_FECHA_NACIMIENTOParameter, i_DIRECCIONParameter, i_EMAILParameter, i_APP_ID_USUARIOParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter);
        }
        public virtual ObjectResult<O_LISTAR_BOLETO_COMPLETO> PGET_LISTADOS_P_LISTAR_BOLETO_COMPLETO(string i_CREDENCIAL, Nullable<decimal> i_ID_BOLETO, Nullable<decimal> i_ID_RUTA, Nullable<decimal> i_ID_USUARIO, Nullable<decimal> i_ID_SUCURSAL, Nullable<System.DateTime> i_FECHA_REGISTRO, Nullable<decimal> i_AUD_ESTADO, Nullable<decimal> i_ID_DETALLE_BOLETO, Nullable<decimal> i_ID_ASIENTO, Nullable<decimal> i_ID_PERSONA, Nullable<decimal> i_ID_TIPO_ASIENTO, string i_NUMERO, string i_TIPO_ASIENTO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_BOLETOParameter;
    
            if (i_ID_BOLETO.HasValue)
            {
                i_ID_BOLETOParameter = new ObjectParameter("I_ID_BOLETO", i_ID_BOLETO);
            }
            else
            {
                i_ID_BOLETOParameter = new ObjectParameter("I_ID_BOLETO", typeof(decimal));
            }
    
            ObjectParameter i_ID_RUTAParameter;
    
            if (i_ID_RUTA.HasValue)
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", i_ID_RUTA);
            }
            else
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", typeof(decimal));
            }
    
            ObjectParameter i_ID_USUARIOParameter;
    
            if (i_ID_USUARIO.HasValue)
            {
                i_ID_USUARIOParameter = new ObjectParameter("I_ID_USUARIO", i_ID_USUARIO);
            }
            else
            {
                i_ID_USUARIOParameter = new ObjectParameter("I_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_ID_SUCURSALParameter;
    
            if (i_ID_SUCURSAL.HasValue)
            {
                i_ID_SUCURSALParameter = new ObjectParameter("I_ID_SUCURSAL", i_ID_SUCURSAL);
            }
            else
            {
                i_ID_SUCURSALParameter = new ObjectParameter("I_ID_SUCURSAL", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_ID_DETALLE_BOLETOParameter;
    
            if (i_ID_DETALLE_BOLETO.HasValue)
            {
                i_ID_DETALLE_BOLETOParameter = new ObjectParameter("I_ID_DETALLE_BOLETO", i_ID_DETALLE_BOLETO);
            }
            else
            {
                i_ID_DETALLE_BOLETOParameter = new ObjectParameter("I_ID_DETALLE_BOLETO", typeof(decimal));
            }
    
            ObjectParameter i_ID_ASIENTOParameter;
    
            if (i_ID_ASIENTO.HasValue)
            {
                i_ID_ASIENTOParameter = new ObjectParameter("I_ID_ASIENTO", i_ID_ASIENTO);
            }
            else
            {
                i_ID_ASIENTOParameter = new ObjectParameter("I_ID_ASIENTO", typeof(decimal));
            }
    
            ObjectParameter i_ID_PERSONAParameter;
    
            if (i_ID_PERSONA.HasValue)
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", i_ID_PERSONA);
            }
            else
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", typeof(decimal));
            }
    
            ObjectParameter i_ID_TIPO_ASIENTOParameter;
    
            if (i_ID_TIPO_ASIENTO.HasValue)
            {
                i_ID_TIPO_ASIENTOParameter = new ObjectParameter("I_ID_TIPO_ASIENTO", i_ID_TIPO_ASIENTO);
            }
            else
            {
                i_ID_TIPO_ASIENTOParameter = new ObjectParameter("I_ID_TIPO_ASIENTO", typeof(decimal));
            }
    
            ObjectParameter i_NUMEROParameter;
    
            if (i_NUMERO != null)
            {
                i_NUMEROParameter = new ObjectParameter("I_NUMERO", i_NUMERO);
            }
            else
            {
                i_NUMEROParameter = new ObjectParameter("I_NUMERO", typeof(string));
            }
    
            ObjectParameter i_TIPO_ASIENTOParameter;
    
            if (i_TIPO_ASIENTO != null)
            {
                i_TIPO_ASIENTOParameter = new ObjectParameter("I_TIPO_ASIENTO", i_TIPO_ASIENTO);
            }
            else
            {
                i_TIPO_ASIENTOParameter = new ObjectParameter("I_TIPO_ASIENTO", typeof(string));
            }
            return base.ExecuteFunction<O_LISTAR_BOLETO_COMPLETO>("PGET_LISTADOS_P_LISTAR_BOLETO_COMPLETO", i_CREDENCIALParameter, i_ID_BOLETOParameter, i_ID_RUTAParameter, i_ID_USUARIOParameter, i_ID_SUCURSALParameter, i_FECHA_REGISTROParameter, i_AUD_ESTADOParameter, i_ID_DETALLE_BOLETOParameter, i_ID_ASIENTOParameter, i_ID_PERSONAParameter, i_ID_TIPO_ASIENTOParameter, i_NUMEROParameter, i_TIPO_ASIENTOParameter);
        }
        public virtual ObjectResult<O_LISTAR_ASIENTO_COMPLETO> PGET_LISTADOS_P_LISTAR_ASIENTO_COMPLETO(string i_CREDENCIAL, Nullable<decimal> i_ID_ASIENTO_RUTA, Nullable<decimal> i_ID_RUTA, Nullable<decimal> i_ID_ESTADO_ASIENTO, string i_ASIENTO_RUTA, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO, Nullable<decimal> i_ID_ASIENTO, string i_ESTADO_ASIENTO, string i_NUMERO, string i_TIPO_ASIENTO, Nullable<decimal> i_ID_TIPO_ASIENTO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_ASIENTO_RUTAParameter;
    
            if (i_ID_ASIENTO_RUTA.HasValue)
            {
                i_ID_ASIENTO_RUTAParameter = new ObjectParameter("I_ID_ASIENTO_RUTA", i_ID_ASIENTO_RUTA);
            }
            else
            {
                i_ID_ASIENTO_RUTAParameter = new ObjectParameter("I_ID_ASIENTO_RUTA", typeof(decimal));
            }
    
            ObjectParameter i_ID_RUTAParameter;
    
            if (i_ID_RUTA.HasValue)
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", i_ID_RUTA);
            }
            else
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", typeof(decimal));
            }
    
            ObjectParameter i_ID_ESTADO_ASIENTOParameter;
    
            if (i_ID_ESTADO_ASIENTO.HasValue)
            {
                i_ID_ESTADO_ASIENTOParameter = new ObjectParameter("I_ID_ESTADO_ASIENTO", i_ID_ESTADO_ASIENTO);
            }
            else
            {
                i_ID_ESTADO_ASIENTOParameter = new ObjectParameter("I_ID_ESTADO_ASIENTO", typeof(decimal));
            }
    
            ObjectParameter i_ASIENTO_RUTAParameter;
    
            if (i_ASIENTO_RUTA != null)
            {
                i_ASIENTO_RUTAParameter = new ObjectParameter("I_ASIENTO_RUTA", i_ASIENTO_RUTA);
            }
            else
            {
                i_ASIENTO_RUTAParameter = new ObjectParameter("I_ASIENTO_RUTA", typeof(string));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
    
            ObjectParameter i_ID_ASIENTOParameter;
    
            if (i_ID_ASIENTO.HasValue)
            {
                i_ID_ASIENTOParameter = new ObjectParameter("I_ID_ASIENTO", i_ID_ASIENTO);
            }
            else
            {
                i_ID_ASIENTOParameter = new ObjectParameter("I_ID_ASIENTO", typeof(decimal));
            }
    
            ObjectParameter i_ESTADO_ASIENTOParameter;
    
            if (i_ESTADO_ASIENTO != null)
            {
                i_ESTADO_ASIENTOParameter = new ObjectParameter("I_ESTADO_ASIENTO", i_ESTADO_ASIENTO);
            }
            else
            {
                i_ESTADO_ASIENTOParameter = new ObjectParameter("I_ESTADO_ASIENTO", typeof(string));
            }
    
            ObjectParameter i_NUMEROParameter;
    
            if (i_NUMERO != null)
            {
                i_NUMEROParameter = new ObjectParameter("I_NUMERO", i_NUMERO);
            }
            else
            {
                i_NUMEROParameter = new ObjectParameter("I_NUMERO", typeof(string));
            }
    
            ObjectParameter i_TIPO_ASIENTOParameter;
    
            if (i_TIPO_ASIENTO != null)
            {
                i_TIPO_ASIENTOParameter = new ObjectParameter("I_TIPO_ASIENTO", i_TIPO_ASIENTO);
            }
            else
            {
                i_TIPO_ASIENTOParameter = new ObjectParameter("I_TIPO_ASIENTO", typeof(string));
            }
    
            ObjectParameter i_ID_TIPO_ASIENTOParameter;
    
            if (i_ID_TIPO_ASIENTO.HasValue)
            {
                i_ID_TIPO_ASIENTOParameter = new ObjectParameter("I_ID_TIPO_ASIENTO", i_ID_TIPO_ASIENTO);
            }
            else
            {
                i_ID_TIPO_ASIENTOParameter = new ObjectParameter("I_ID_TIPO_ASIENTO", typeof(decimal));
            }
            return base.ExecuteFunction<O_LISTAR_ASIENTO_COMPLETO>("PGET_LISTADOS_P_LISTAR_ASIENTO_COMPLETO", i_CREDENCIALParameter, i_ID_ASIENTO_RUTAParameter, i_ID_RUTAParameter, i_ID_ESTADO_ASIENTOParameter, i_ASIENTO_RUTAParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter, i_ID_ASIENTOParameter, i_ESTADO_ASIENTOParameter, i_NUMEROParameter, i_TIPO_ASIENTOParameter, i_ID_TIPO_ASIENTOParameter);
        }
        public virtual ObjectResult<O_RESULTADO> PGET_GESTION_P_REGISTRAR_BOLETO(string i_CREDENCIAL, Nullable<decimal> i_ID_BOLETO, Nullable<decimal> i_ID_USUARIO, Nullable<decimal> i_ID_RUTA, Nullable<decimal> i_ID_SUCURSAL, Nullable<decimal> i_APP_ID_USUARIO, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_BOLETOParameter;
    
            if (i_ID_BOLETO.HasValue)
            {
                i_ID_BOLETOParameter = new ObjectParameter("I_ID_BOLETO", i_ID_BOLETO);
            }
            else
            {
                i_ID_BOLETOParameter = new ObjectParameter("I_ID_BOLETO", typeof(decimal));
            }
    
            ObjectParameter i_ID_USUARIOParameter;
    
            if (i_ID_USUARIO.HasValue)
            {
                i_ID_USUARIOParameter = new ObjectParameter("I_ID_USUARIO", i_ID_USUARIO);
            }
            else
            {
                i_ID_USUARIOParameter = new ObjectParameter("I_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_ID_RUTAParameter;
    
            if (i_ID_RUTA.HasValue)
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", i_ID_RUTA);
            }
            else
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", typeof(decimal));
            }
    
            ObjectParameter i_ID_SUCURSALParameter;
    
            if (i_ID_SUCURSAL.HasValue)
            {
                i_ID_SUCURSALParameter = new ObjectParameter("I_ID_SUCURSAL", i_ID_SUCURSAL);
            }
            else
            {
                i_ID_SUCURSALParameter = new ObjectParameter("I_ID_SUCURSAL", typeof(decimal));
            }
    
            ObjectParameter i_APP_ID_USUARIOParameter;
    
            if (i_APP_ID_USUARIO.HasValue)
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", i_APP_ID_USUARIO);
            }
            else
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
            return base.ExecuteFunction<O_RESULTADO>("PGET_GESTION_P_REGISTRAR_BOLETO", i_CREDENCIALParameter, i_ID_BOLETOParameter, i_ID_USUARIOParameter, i_ID_RUTAParameter, i_ID_SUCURSALParameter, i_APP_ID_USUARIOParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter);
        }
        public virtual ObjectResult<O_RESULTADO> PGET_GESTION_P_REGISTRAR_ASIENTO(string i_CREDENCIAL, Nullable<decimal> i_ID_ASIENTO, Nullable<decimal> i_ID_TIPO_ASIENTO, string i_NUMERO, Nullable<decimal> i_APP_ID_USUARIO, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_ASIENTOParameter;
    
            if (i_ID_ASIENTO.HasValue)
            {
                i_ID_ASIENTOParameter = new ObjectParameter("I_ID_ASIENTO", i_ID_ASIENTO);
            }
            else
            {
                i_ID_ASIENTOParameter = new ObjectParameter("I_ID_ASIENTO", typeof(decimal));
            }
    
            ObjectParameter i_ID_TIPO_ASIENTOParameter;
    
            if (i_ID_TIPO_ASIENTO.HasValue)
            {
                i_ID_TIPO_ASIENTOParameter = new ObjectParameter("I_ID_TIPO_ASIENTO", i_ID_TIPO_ASIENTO);
            }
            else
            {
                i_ID_TIPO_ASIENTOParameter = new ObjectParameter("I_ID_TIPO_ASIENTO", typeof(decimal));
            }
    
            ObjectParameter i_NUMEROParameter;
    
            if (i_NUMERO != null)
            {
                i_NUMEROParameter = new ObjectParameter("I_NUMERO", i_NUMERO);
            }
            else
            {
                i_NUMEROParameter = new ObjectParameter("I_NUMERO", typeof(string));
            }
    
            ObjectParameter i_APP_ID_USUARIOParameter;
    
            if (i_APP_ID_USUARIO.HasValue)
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", i_APP_ID_USUARIO);
            }
            else
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
            return base.ExecuteFunction<O_RESULTADO>("PGET_GESTION_P_REGISTRAR_ASIENTO", i_CREDENCIALParameter, i_ID_ASIENTOParameter, i_ID_TIPO_ASIENTOParameter, i_NUMEROParameter, i_APP_ID_USUARIOParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter);
        }
        public virtual ObjectResult<O_RESULTADO> PGET_GESTION_P_REGISTRAR_DETALLE_BOLETO(string i_CREDENCIAL, Nullable<decimal> i_ID_DETALLE_BOLETO, Nullable<decimal> i_ID_BOLETO, Nullable<decimal> i_ID_ASIENTO, Nullable<decimal> i_ID_PERSONA, Nullable<decimal> i_APP_ID_USUARIO, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_DETALLE_BOLETOParameter;
    
            if (i_ID_DETALLE_BOLETO.HasValue)
            {
                i_ID_DETALLE_BOLETOParameter = new ObjectParameter("I_ID_DETALLE_BOLETO", i_ID_DETALLE_BOLETO);
            }
            else
            {
                i_ID_DETALLE_BOLETOParameter = new ObjectParameter("I_ID_DETALLE_BOLETO", typeof(decimal));
            }
    
            ObjectParameter i_ID_BOLETOParameter;
    
            if (i_ID_BOLETO.HasValue)
            {
                i_ID_BOLETOParameter = new ObjectParameter("I_ID_BOLETO", i_ID_BOLETO);
            }
            else
            {
                i_ID_BOLETOParameter = new ObjectParameter("I_ID_BOLETO", typeof(decimal));
            }
    
            ObjectParameter i_ID_ASIENTOParameter;
    
            if (i_ID_ASIENTO.HasValue)
            {
                i_ID_ASIENTOParameter = new ObjectParameter("I_ID_ASIENTO", i_ID_ASIENTO);
            }
            else
            {
                i_ID_ASIENTOParameter = new ObjectParameter("I_ID_ASIENTO", typeof(decimal));
            }
    
            ObjectParameter i_ID_PERSONAParameter;
    
            if (i_ID_PERSONA.HasValue)
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", i_ID_PERSONA);
            }
            else
            {
                i_ID_PERSONAParameter = new ObjectParameter("I_ID_PERSONA", typeof(decimal));
            }
    
            ObjectParameter i_APP_ID_USUARIOParameter;
    
            if (i_APP_ID_USUARIO.HasValue)
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", i_APP_ID_USUARIO);
            }
            else
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
            return base.ExecuteFunction<O_RESULTADO>("PGET_GESTION_P_REGISTRAR_DETALLE_BOLETO", i_CREDENCIALParameter, i_ID_DETALLE_BOLETOParameter, i_ID_BOLETOParameter, i_ID_ASIENTOParameter, i_ID_PERSONAParameter, i_APP_ID_USUARIOParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter);
        }
        public virtual ObjectResult<O_RESULTADO> PGET_GESTION_P_REGISTRAR_ASIENTO_RUTA(string i_CREDENCIAL, Nullable<decimal> i_ID_ASIENTO_RUTA, Nullable<decimal> i_ID_RUTA, Nullable<decimal> i_ID_ASIENTO, Nullable<decimal> i_ID_ESTADO_ASIENTO, string i_DESCRIPCION, Nullable<decimal> i_APP_ID_USUARIO, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_ASIENTO_RUTAParameter;
    
            if (i_ID_ASIENTO_RUTA.HasValue)
            {
                i_ID_ASIENTO_RUTAParameter = new ObjectParameter("I_ID_ASIENTO_RUTA", i_ID_ASIENTO_RUTA);
            }
            else
            {
                i_ID_ASIENTO_RUTAParameter = new ObjectParameter("I_ID_ASIENTO_RUTA", typeof(decimal));
            }
    
            ObjectParameter i_ID_RUTAParameter;
    
            if (i_ID_RUTA.HasValue)
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", i_ID_RUTA);
            }
            else
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", typeof(decimal));
            }
    
            ObjectParameter i_ID_ASIENTOParameter;
    
            if (i_ID_ASIENTO.HasValue)
            {
                i_ID_ASIENTOParameter = new ObjectParameter("I_ID_ASIENTO", i_ID_ASIENTO);
            }
            else
            {
                i_ID_ASIENTOParameter = new ObjectParameter("I_ID_ASIENTO", typeof(decimal));
            }
    
            ObjectParameter i_ID_ESTADO_ASIENTOParameter;
    
            if (i_ID_ESTADO_ASIENTO.HasValue)
            {
                i_ID_ESTADO_ASIENTOParameter = new ObjectParameter("I_ID_ESTADO_ASIENTO", i_ID_ESTADO_ASIENTO);
            }
            else
            {
                i_ID_ESTADO_ASIENTOParameter = new ObjectParameter("I_ID_ESTADO_ASIENTO", typeof(decimal));
            }
    
            ObjectParameter i_DESCRIPCIONParameter;
    
            if (i_DESCRIPCION != null)
            {
                i_DESCRIPCIONParameter = new ObjectParameter("I_DESCRIPCION", i_DESCRIPCION);
            }
            else
            {
                i_DESCRIPCIONParameter = new ObjectParameter("I_DESCRIPCION", typeof(string));
            }
    
            ObjectParameter i_APP_ID_USUARIOParameter;
    
            if (i_APP_ID_USUARIO.HasValue)
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", i_APP_ID_USUARIO);
            }
            else
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
            return base.ExecuteFunction<O_RESULTADO>("PGET_GESTION_P_REGISTRAR_ASIENTO_RUTA", i_CREDENCIALParameter, i_ID_ASIENTO_RUTAParameter, i_ID_RUTAParameter, i_ID_ASIENTOParameter, i_ID_ESTADO_ASIENTOParameter, i_DESCRIPCIONParameter, i_APP_ID_USUARIOParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter);
        }
        public virtual ObjectResult<O_RESULTADO> PGET_GESTION_P_REGISTRAR_RUTA(string i_CREDENCIAL, Nullable<decimal> i_ID_RUTA, Nullable<decimal> i_ID_CIUDAD_ORIGEN, Nullable<decimal> i_ID_CIUDAD_DESTINO, Nullable<decimal> i_ID_FLOTA, Nullable<decimal> i_ID_HORARIO, Nullable<decimal> i_ID_PRECIO, Nullable<decimal> i_ID_CONDUCTOR, Nullable<decimal> i_APP_ID_USUARIO, Nullable<decimal> i_AUD_ESTADO, Nullable<System.DateTime> i_FECHA_REGISTRO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_RUTAParameter;
    
            if (i_ID_RUTA.HasValue)
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", i_ID_RUTA);
            }
            else
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", typeof(decimal));
            }
    
            ObjectParameter i_ID_CIUDAD_ORIGENParameter;
    
            if (i_ID_CIUDAD_ORIGEN.HasValue)
            {
                i_ID_CIUDAD_ORIGENParameter = new ObjectParameter("I_ID_CIUDAD_ORIGEN", i_ID_CIUDAD_ORIGEN);
            }
            else
            {
                i_ID_CIUDAD_ORIGENParameter = new ObjectParameter("I_ID_CIUDAD_ORIGEN", typeof(decimal));
            }
    
            ObjectParameter i_ID_CIUDAD_DESTINOParameter;
    
            if (i_ID_CIUDAD_DESTINO.HasValue)
            {
                i_ID_CIUDAD_DESTINOParameter = new ObjectParameter("I_ID_CIUDAD_DESTINO", i_ID_CIUDAD_DESTINO);
            }
            else
            {
                i_ID_CIUDAD_DESTINOParameter = new ObjectParameter("I_ID_CIUDAD_DESTINO", typeof(decimal));
            }
    
            ObjectParameter i_ID_FLOTAParameter;
    
            if (i_ID_FLOTA.HasValue)
            {
                i_ID_FLOTAParameter = new ObjectParameter("I_ID_FLOTA", i_ID_FLOTA);
            }
            else
            {
                i_ID_FLOTAParameter = new ObjectParameter("I_ID_FLOTA", typeof(decimal));
            }
    
            ObjectParameter i_ID_HORARIOParameter;
    
            if (i_ID_HORARIO.HasValue)
            {
                i_ID_HORARIOParameter = new ObjectParameter("I_ID_HORARIO", i_ID_HORARIO);
            }
            else
            {
                i_ID_HORARIOParameter = new ObjectParameter("I_ID_HORARIO", typeof(decimal));
            }
    
            ObjectParameter i_ID_PRECIOParameter;
    
            if (i_ID_PRECIO.HasValue)
            {
                i_ID_PRECIOParameter = new ObjectParameter("I_ID_PRECIO", i_ID_PRECIO);
            }
            else
            {
                i_ID_PRECIOParameter = new ObjectParameter("I_ID_PRECIO", typeof(decimal));
            }
    
            ObjectParameter i_ID_CONDUCTORParameter;
    
            if (i_ID_CONDUCTOR.HasValue)
            {
                i_ID_CONDUCTORParameter = new ObjectParameter("I_ID_CONDUCTOR", i_ID_CONDUCTOR);
            }
            else
            {
                i_ID_CONDUCTORParameter = new ObjectParameter("I_ID_CONDUCTOR", typeof(decimal));
            }
    
            ObjectParameter i_APP_ID_USUARIOParameter;
    
            if (i_APP_ID_USUARIO.HasValue)
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", i_APP_ID_USUARIO);
            }
            else
            {
                i_APP_ID_USUARIOParameter = new ObjectParameter("I_APP_ID_USUARIO", typeof(decimal));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
    
            ObjectParameter i_FECHA_REGISTROParameter;
    
            if (i_FECHA_REGISTRO.HasValue)
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", i_FECHA_REGISTRO);
            }
            else
            {
                i_FECHA_REGISTROParameter = new ObjectParameter("I_FECHA_REGISTRO", typeof(System.DateTime));
            }
            return base.ExecuteFunction<O_RESULTADO>("PGET_GESTION_P_REGISTRAR_RUTA", i_CREDENCIALParameter, i_ID_RUTAParameter, i_ID_CIUDAD_ORIGENParameter, i_ID_CIUDAD_DESTINOParameter, i_ID_FLOTAParameter, i_ID_HORARIOParameter, i_ID_PRECIOParameter, i_ID_CONDUCTORParameter, i_APP_ID_USUARIOParameter, i_AUD_ESTADOParameter, i_FECHA_REGISTROParameter);
        }
        public virtual ObjectResult<O_LISTAR_RUTA_COMPLETO> PGET_LISTADOS_P_LISTAR_RUTA_COMPLETO(string i_CREDENCIAL, Nullable<decimal> i_ID_RUTA, Nullable<decimal> i_ID_CIUDAD_ORIGEN, Nullable<decimal> i_ID_CIUDAD_DESTINO, Nullable<decimal> i_ID_FLOTA, Nullable<decimal> i_ID_HORARIO, Nullable<decimal> i_ID_PRECIO, Nullable<decimal> i_ID_CONDUCTOR, Nullable<decimal> i_PRECIO, string i_HORA, Nullable<decimal> i_ID_TIPO_FLOTA, string i_PLACA, string i_MODELO, Nullable<decimal> i_NRO_ASIENTOS, string i_TIPO_FLOTA, Nullable<decimal> i_AUD_ESTADO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_RUTAParameter;
    
            if (i_ID_RUTA.HasValue)
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", i_ID_RUTA);
            }
            else
            {
                i_ID_RUTAParameter = new ObjectParameter("I_ID_RUTA", typeof(decimal));
            }
    
            ObjectParameter i_ID_CIUDAD_ORIGENParameter;
    
            if (i_ID_CIUDAD_ORIGEN.HasValue)
            {
                i_ID_CIUDAD_ORIGENParameter = new ObjectParameter("I_ID_CIUDAD_ORIGEN", i_ID_CIUDAD_ORIGEN);
            }
            else
            {
                i_ID_CIUDAD_ORIGENParameter = new ObjectParameter("I_ID_CIUDAD_ORIGEN", typeof(decimal));
            }
    
            ObjectParameter i_ID_CIUDAD_DESTINOParameter;
    
            if (i_ID_CIUDAD_DESTINO.HasValue)
            {
                i_ID_CIUDAD_DESTINOParameter = new ObjectParameter("I_ID_CIUDAD_DESTINO", i_ID_CIUDAD_DESTINO);
            }
            else
            {
                i_ID_CIUDAD_DESTINOParameter = new ObjectParameter("I_ID_CIUDAD_DESTINO", typeof(decimal));
            }
    
            ObjectParameter i_ID_FLOTAParameter;
    
            if (i_ID_FLOTA.HasValue)
            {
                i_ID_FLOTAParameter = new ObjectParameter("I_ID_FLOTA", i_ID_FLOTA);
            }
            else
            {
                i_ID_FLOTAParameter = new ObjectParameter("I_ID_FLOTA", typeof(decimal));
            }
    
            ObjectParameter i_ID_HORARIOParameter;
    
            if (i_ID_HORARIO.HasValue)
            {
                i_ID_HORARIOParameter = new ObjectParameter("I_ID_HORARIO", i_ID_HORARIO);
            }
            else
            {
                i_ID_HORARIOParameter = new ObjectParameter("I_ID_HORARIO", typeof(decimal));
            }
    
            ObjectParameter i_ID_PRECIOParameter;
    
            if (i_ID_PRECIO.HasValue)
            {
                i_ID_PRECIOParameter = new ObjectParameter("I_ID_PRECIO", i_ID_PRECIO);
            }
            else
            {
                i_ID_PRECIOParameter = new ObjectParameter("I_ID_PRECIO", typeof(decimal));
            }
    
            ObjectParameter i_ID_CONDUCTORParameter;
    
            if (i_ID_CONDUCTOR.HasValue)
            {
                i_ID_CONDUCTORParameter = new ObjectParameter("I_ID_CONDUCTOR", i_ID_CONDUCTOR);
            }
            else
            {
                i_ID_CONDUCTORParameter = new ObjectParameter("I_ID_CONDUCTOR", typeof(decimal));
            }
    
            ObjectParameter i_PRECIOParameter;
    
            if (i_PRECIO.HasValue)
            {
                i_PRECIOParameter = new ObjectParameter("I_PRECIO", i_PRECIO);
            }
            else
            {
                i_PRECIOParameter = new ObjectParameter("I_PRECIO", typeof(decimal));
            }
    
            ObjectParameter i_HORAParameter;
    
            if (i_HORA != null)
            {
                i_HORAParameter = new ObjectParameter("I_HORA", i_HORA);
            }
            else
            {
                i_HORAParameter = new ObjectParameter("I_HORA", typeof(string));
            }
    
            ObjectParameter i_ID_TIPO_FLOTAParameter;
    
            if (i_ID_TIPO_FLOTA.HasValue)
            {
                i_ID_TIPO_FLOTAParameter = new ObjectParameter("I_ID_TIPO_FLOTA", i_ID_TIPO_FLOTA);
            }
            else
            {
                i_ID_TIPO_FLOTAParameter = new ObjectParameter("I_ID_TIPO_FLOTA", typeof(decimal));
            }
    
            ObjectParameter i_PLACAParameter;
    
            if (i_PLACA != null)
            {
                i_PLACAParameter = new ObjectParameter("I_PLACA", i_PLACA);
            }
            else
            {
                i_PLACAParameter = new ObjectParameter("I_PLACA", typeof(string));
            }
    
            ObjectParameter i_MODELOParameter;
    
            if (i_MODELO != null)
            {
                i_MODELOParameter = new ObjectParameter("I_MODELO", i_MODELO);
            }
            else
            {
                i_MODELOParameter = new ObjectParameter("I_MODELO", typeof(string));
            }
    
            ObjectParameter i_NRO_ASIENTOSParameter;
    
            if (i_NRO_ASIENTOS.HasValue)
            {
                i_NRO_ASIENTOSParameter = new ObjectParameter("I_NRO_ASIENTOS", i_NRO_ASIENTOS);
            }
            else
            {
                i_NRO_ASIENTOSParameter = new ObjectParameter("I_NRO_ASIENTOS", typeof(decimal));
            }
    
            ObjectParameter i_TIPO_FLOTAParameter;
    
            if (i_TIPO_FLOTA != null)
            {
                i_TIPO_FLOTAParameter = new ObjectParameter("I_TIPO_FLOTA", i_TIPO_FLOTA);
            }
            else
            {
                i_TIPO_FLOTAParameter = new ObjectParameter("I_TIPO_FLOTA", typeof(string));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
            return base.ExecuteFunction<O_LISTAR_RUTA_COMPLETO>("PGET_LISTADOS_P_LISTAR_RUTA_COMPLETO", i_CREDENCIALParameter, i_ID_RUTAParameter, i_ID_CIUDAD_ORIGENParameter, i_ID_CIUDAD_DESTINOParameter, i_ID_FLOTAParameter, i_ID_HORARIOParameter, i_ID_PRECIOParameter, i_ID_CONDUCTORParameter, i_PRECIOParameter, i_HORAParameter, i_ID_TIPO_FLOTAParameter, i_PLACAParameter, i_MODELOParameter, i_NRO_ASIENTOSParameter, i_TIPO_FLOTAParameter, i_AUD_ESTADOParameter);
        }
        public virtual ObjectResult<O_CIUDAD> PGET_LISTADOS_P_LISTAR_CIUDAD(string i_CREDENCIAL, Nullable<decimal> i_ID_CIUDAD, string i_CIUDAD, Nullable<decimal> i_AUD_ESTADO)
        {
    
            ObjectParameter i_CREDENCIALParameter;
    
            if (i_CREDENCIAL != null)
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", i_CREDENCIAL);
            }
            else
            {
                i_CREDENCIALParameter = new ObjectParameter("I_CREDENCIAL", typeof(string));
            }
    
            ObjectParameter i_ID_CIUDADParameter;
    
            if (i_ID_CIUDAD.HasValue)
            {
                i_ID_CIUDADParameter = new ObjectParameter("I_ID_CIUDAD", i_ID_CIUDAD);
            }
            else
            {
                i_ID_CIUDADParameter = new ObjectParameter("I_ID_CIUDAD", typeof(decimal));
            }
    
            ObjectParameter i_CIUDADParameter;
    
            if (i_CIUDAD != null)
            {
                i_CIUDADParameter = new ObjectParameter("I_CIUDAD", i_CIUDAD);
            }
            else
            {
                i_CIUDADParameter = new ObjectParameter("I_CIUDAD", typeof(string));
            }
    
            ObjectParameter i_AUD_ESTADOParameter;
    
            if (i_AUD_ESTADO.HasValue)
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", i_AUD_ESTADO);
            }
            else
            {
                i_AUD_ESTADOParameter = new ObjectParameter("I_AUD_ESTADO", typeof(decimal));
            }
            return base.ExecuteFunction<O_CIUDAD>("PGET_LISTADOS_P_LISTAR_CIUDAD", i_CREDENCIALParameter, i_ID_CIUDADParameter, i_CIUDADParameter, i_AUD_ESTADOParameter);
        }

        #endregion

    }
}
